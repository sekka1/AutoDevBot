{
  "name": "hash",
  "version": "0.2.0",
  "description": "Safely use a JavaScript object as hash",
  "homepage": "https://github.com/akidee/hash.js",
  "author": {
    "name": "Andreas Kalsch",
    "email": "mail@akidee.de",
    "url": "http://akidee.de/"
  },
  "engine": {
    "node": "0"
  },
  "dependencies": {},
  "devDependencies": {},
  "keywords": [
    "hash",
    "hashing",
    "object",
    "associative array",
    "associative",
    "safe",
    "simple",
    "minimal"
  ],
  "scripts": {
    "test": "node test.js"
  },
  "readme": "    __               __        _\n   / /_  ____ ______/ /_      (_)____\n  / __ \\/ __ `/ ___/ __ \\    / / ___/\n / / / / /_/ (__  ) / / /   / (__  )\n/_/ /_/\\__,_/____/_/ /_(_)_/ /____/  v0.2.0\n                        /___/\n\n\n\n\nhash.js is a simple way to safely use a JavaScript object as hash.\n\nFast: Usage of a regular object as the hash\n\nSafe: Any key can be used. Keys with names that start with \"__\" are internally escaped to circumvent the mess that JS implementations induce with \"magic\" properties like __proto__, __count__, __parent__\n\n\n\n\nInstallation\n\nnpm install hash\n\n\n\n\nExample in node.js\n\nvar hash = require('hash')\n\nvar existingDataWithEscapedKeys = { __: 1, b: 2, '__parent__%': 3 }\n\nvar myHash = new hash(existingDataWithEscapedKeys /* optional */)\n\nmyHash.set('a', 123)\nmyHash.set('__proto__', 'value')\n\nmyHash.get('__parent__') // 3\nmyHash.get('a') // 123\nmyHash.get('__proto__') // 'value'\n\nmyHash.has('constructor') // false\n\nmyHash.del('a')\n\nmyHash.get('a') // undefined\n\nmyHash.del('__parent__')\n\nmyHash.getData() // { __: 1, b: 2, '__proto__%': 'value' }\n\nmyHash.forEach(function iterator (value, key) {\n\n\t// ...\n} /*, optionalThisArg */)\n\n\n\n\nTested in\n\nnode.js\nIE 5.5+, FF 3+, Chrome 1+, Opera 10+, Safari 4+\nMobile Safari 4.0\n\n\n\n\nFurther reads\n\nhttp://www.devthought.com/2012/01/18/an-object-is-not-a-hash/\nhttp://www.2ality.com/2012/01/objects-as-maps.html\n",
  "readmeFilename": "README",
  "_id": "hash@0.2.0",
  "dist": {
    "shasum": "0e2989ae28bc1c2fda9e68a04bdddee28edb29db"
  },
  "_from": "hash@",
  "_resolved": "https://registry.npmjs.org/hash/-/hash-0.2.0.tgz"
}
